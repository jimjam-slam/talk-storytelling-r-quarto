[
  {
    "objectID": "data/analysis.html",
    "href": "data/analysis.html",
    "title": "Transform/join electricity demand and power data",
    "section": "",
    "text": "Data provided by Mat Lipson\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(here)\n\nhere() starts at /Users/rensa/Code/talks/talk-storytelling-r-quarto\n\n\nWeather data:\n\n# load the min and max temperature obs in\nobs_min &lt;-\n  read_csv(here(\"data\", \"weather\", \"IDCJAC0011_086068_1800_Data.csv\")) |&gt;\n  janitor::clean_names() |&gt;\n  select(year, month, day, tmin = minimum_temperature_degree_c)\n\nRows: 7109 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): Product code, Bureau of Meteorology station number, Month, Day, Qua...\ndbl (3): Year, Minimum temperature (Degree C), Days of accumulation of minim...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nobs_max &lt;-\n  read_csv(here(\"data\", \"weather\", \"IDCJAC0010_086068_1800_Data.csv\")) |&gt;\n  janitor::clean_names() |&gt;\n  select(year, month, day, tmax = maximum_temperature_degree_c)\n\nRows: 7108 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): Product code, Bureau of Meteorology station number, Month, Day, Qua...\ndbl (3): Year, Maximum temperature (Degree C), Days of accumulation of maxim...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# bring min and max obs together; subset to 2015-2018\nobs &lt;-\n  full_join(obs_min, obs_max, join_by(year, month, day)) |&gt;\n  filter(between(year, 2005, 2018)) |&gt;\n  mutate(date = ymd(paste(year, month, day)))\n\nElectricity data:\n\nsite_ids &lt;- c(\"NC\", \"PM\", \"DA\")\n\n# get provider info for citipower\ninfo &lt;-\n  read_csv(\n    here(\"data\", \"electricity\",\n      \"DNSP_Zone_Substation_Characteristics.csv\")) |&gt;\n  janitor::clean_names() |&gt;\n  # get first word of of the provider name\n  mutate(dnsp_short = tolower(word(distribution_network_service_provider))) |&gt;\n  # focus on citipower only\n  filter(dnsp_short == tolower(\"citipower\")) |&gt;\n  select(\n    -distribution_network_service_provider,\n    -energy_asset,\n    -zone_substation_area_km2) |&gt;\n  rename(\n    name = zone_substation_name,\n    id = zone_substation_id) |&gt;\n  select(dnsp_short, name, id, everything())\n\nRows: 1298 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Distribution Network Service Provider, energy_asset, Zone Substati...\ndbl (13): Zone Substation Area (km2), Dwellings, Persons, Residential, Comme...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# get the 3 most common uses for each site\ninfo_3sites &lt;-\n  info |&gt;\n  filter(id %in% site_ids) |&gt;\n  select(-dnsp_short, -dwellings, -persons) |&gt;\n  pivot_longer(-c(name, id), names_to = \"Use\", values_to = \"fraction\") |&gt;\n  group_by(id, name) |&gt;\n  arrange(desc(fraction)) |&gt;\n  slice(1:3) |&gt;\n  mutate(use_string = paste0(\n    str_to_sentence(Use), \": \",\n    scales::percent(fraction))) |&gt;\n  summarise(area_string = paste(use_string, collapse = \"\\n\")) |&gt;\n  ungroup()\n\n`summarise()` has grouped output by 'id'. You can override using the `.groups`\nargument.\n\n# get citipower electricity demand\ndemand &lt;-\n  read_csv(\n    here(\"data\", \"electricity\", \"citipower_2005_2017.csv\"),\n    na = c(\"nan\", \"NA\", \"\")) |&gt;\n  # remove neagtive demand values\n  mutate(across(-datetime, ~ replace(.x, .x &lt; 0, NA_real_))) |&gt;\n  # calculate each day's max demand (half hourly is a bit much)\n  mutate(date = as.Date(datetime), .before = everything()) |&gt;\n  group_by(date) |&gt;\n  summarise(across(everything(), ~ max(.x, na.rm = TRUE))) |&gt;\n  select(-datetime)\n\nRows: 146636 Columns: 25\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl  (24): BC, DA, SK, NC, NR, Q, RD, WA, WB, AP, F, C, J, L, MG, FR, MP, SO...\ndttm  (1): datetime\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: There were 36882 warnings in `summarise()`.\nThe first warning was:\nℹ In argument: `across(everything(), ~max(.x, na.rm = TRUE))`.\nℹ In group 700: `date = 2010-01-01`.\nCaused by warning in `max()`:\n! no non-missing arguments to max; returning -Inf\nℹ Run `dplyr::last_dplyr_warnings()` to see the 36881 remaining warnings.\n\n\nLet’s join and merge them:\n\n# merge obs and demand; separate out weekends (and further slice to 2015 onward)\ndf &lt;-\n  inner_join(obs, demand, join_by(date)) |&gt;\n  filter(year &gt;= 2015) |&gt;\n  mutate(\n    working = if_else(\n      weekdays(date) %in% c(\"Saturday\", \"Sunday\"),\n      \"Weekend\",\n      \"Weekday\"))\n\n# make this longer (separate row for each site) and focus on 3 sites  \ndf_long &lt;-\n  df |&gt;\n  tidyr::pivot_longer(\n    -c(year, month, day, tmin, tmax, date, working),\n    names_to = \"site\",\n    values_to = \"demand\") |&gt;\n  filter(site %in% site_ids) |&gt;\n  filter(!is.infinite(demand)) |&gt;\n  # also merge in the site names and use info\n  left_join(info_3sites, join_by(site == id), multiple = \"all\") |&gt;\n  select(site, name, everything()) |&gt;\n  write_csv(here(\"data\", \"power-temperature-threesites.csv\"))\n\nDone!"
  },
  {
    "objectID": "index.html#telling-stories-with-data",
    "href": "index.html#telling-stories-with-data",
    "title": "",
    "section": "Telling stories with data",
    "text": "Telling stories with data\nJames Goldie"
  },
  {
    "objectID": "index.html#section",
    "href": "index.html#section",
    "title": "",
    "section": "",
    "text": "Climate researcher\n↓\nData journalist"
  },
  {
    "objectID": "index.html#audience-medium-and-message",
    "href": "index.html#audience-medium-and-message",
    "title": "",
    "section": "Audience, medium and message",
    "text": "Audience, medium and message"
  },
  {
    "objectID": "index.html#audience",
    "href": "index.html#audience",
    "title": "",
    "section": "Audience",
    "text": "Audience\nDo they have specialist training? (In your field, or another?)\nWhat are their wants and worries?"
  },
  {
    "objectID": "index.html#medium",
    "href": "index.html#medium",
    "title": "",
    "section": "Medium",
    "text": "Medium\n\n\n\n\n\nCredit: MCCCRH\n\n\n\nvs.\n\n\n\n\nCredit: Abhijith S Nair/Unsplash"
  },
  {
    "objectID": "index.html#medium-1",
    "href": "index.html#medium-1",
    "title": "",
    "section": "Medium",
    "text": "Medium\nWhere will people encounter your work?\nHow long will they have to consider it?\nDid they seek it out?"
  },
  {
    "objectID": "index.html#message",
    "href": "index.html#message",
    "title": "",
    "section": "Message",
    "text": "Message"
  },
  {
    "objectID": "index.html#what-will-your-readers-see-first",
    "href": "index.html#what-will-your-readers-see-first",
    "title": "",
    "section": "What will your readers see first?",
    "text": "What will your readers see first?\nThis is called visual hierarchy.\n\n\nWhat did you see first on this slide? What did you see second?\nWhy?"
  },
  {
    "objectID": "index.html#section-1",
    "href": "index.html#section-1",
    "title": "",
    "section": "",
    "text": "When all of the elements on your plot look the same, it’s really hard for people to decide what to focus on. Without that focus, it’s difficult for your plot to lead to a conclusion. Instead, you want to vary your plot elements, drawing attention to the most important things first. There are lots of ways to do this: bolding text, making it bigger, using colours, and taking advantage of natural reading direction can all help to establish visual hierarchy."
  },
  {
    "objectID": "index.html#section-2",
    "href": "index.html#section-2",
    "title": "",
    "section": "",
    "text": "When all of the elements on your plot look the same, it’s really hard for people to decide what to focus on.\n\n\nWithout that focus, it’s difficult for your plot to lead to a conclusion.\n\n\nInstead, you want to vary your plot elements, drawing attention to the most important things first."
  },
  {
    "objectID": "index.html#section-3",
    "href": "index.html#section-3",
    "title": "",
    "section": "",
    "text": "There are lots of ways to do this:\n\n\nbolding text\nmaking it bigger\n\nusing striking colours… … or softer colours\n\ntaking advantage of natural reading direction\n\nThese techniques can all help establish visual hierarchy."
  },
  {
    "objectID": "index.html#what-is-quarto",
    "href": "index.html#what-is-quarto",
    "title": "",
    "section": "What is Quarto?",
    "text": "What is Quarto?\n\n\n\n\n\nThe source text of a Quarto document\n\n\n\n\n\n\nThe visual editor’s view of a Quarto document"
  },
  {
    "objectID": "index.html#example-1",
    "href": "index.html#example-1",
    "title": "",
    "section": "Example 1",
    "text": "Example 1\nYour data is electricity demand and temperature at 3 inner Melbourne sites:\ngithub.com/jimjam-slam/talk-storytelling-r-quarto/\nblob/main/data/power-temperature-threesites.csv\n\n\n\n\npowerTemp = FileAttachment(\"data/power-temperature-threesites.csv\").csv({ typed: true })\n\nInputs.table(powerTemp)"
  },
  {
    "objectID": "index.html#a-basic-chart",
    "href": "index.html#a-basic-chart",
    "title": "",
    "section": "A basic chart",
    "text": "A basic chart\n\n\n\nggplot(power_temp) +\n  aes(x = tmax, y = demand, colour = working) +\n  geom_point(size = 2) +\n  facet_wrap(vars(name)) +\n  labs(\n    x = \"2m air temperature [°C]\",\n    y = \"Electricity demand [MW]\",\n    title = \"Electricity and temperature\")\n\n\n\n\n\n\n\n\n\n\nWhat stories could we tell with this data?\nWhat improvements could we make?"
  },
  {
    "objectID": "index.html#use-quarto-to-explore-this-data",
    "href": "index.html#use-quarto-to-explore-this-data",
    "title": "",
    "section": "Use Quarto to explore this data",
    "text": "Use Quarto to explore this data\n\n\nR script\nlibrary(tidyverse)\n\nggplot(data) +\n  aes() +\n  # ...\n\nR code chunk in Quarto doc\n---\ntitle: \"Power and temperature\"\n---\n\nLet's look at this data!\n\n```{r}\nlibrary(tidyverse)\n\nggplot(data) +\n  aes() +\n  # ...\n```"
  },
  {
    "objectID": "index.html#whats-scrollytelling",
    "href": "index.html#whats-scrollytelling",
    "title": "",
    "section": "What’s scrollytelling?",
    "text": "What’s scrollytelling?\nScrollytelling involves graphics that stick to the screen and and change as the user scrolls.\n\n\n\n\nVideo\nABC scrollytelling story on fake AI imagery\n\n\n\n\n\nVideo\nNew York Times scrollytelling story on \"Shah Jahan on a terrace, holding a pendant set with his portrait\" by Chitarman"
  },
  {
    "objectID": "index.html#closeread-scrollytelling-with-quarto",
    "href": "index.html#closeread-scrollytelling-with-quarto",
    "title": "",
    "section": "Closeread: scrollytelling with Quarto",
    "text": "Closeread: scrollytelling with Quarto\nCloseread is a Quarto extension developed by Andrew Bray\nand James Goldie (me!)\n(We named it after a New York Times series — the piece in the last slide was from this series!)\nCloseread lets you turn a regular Quarto doc into a scrollytelling doc"
  },
  {
    "objectID": "index.html#how-closeread-works",
    "href": "index.html#how-closeread-works",
    "title": "",
    "section": "How Closeread works",
    "text": "How Closeread works\n\n\n\n\nStep 1\nA Quarto extension is like an R package — it extends Quarto’s abilities.\nInstall Closeread in the RStudio Terminal by running:\nquarto add qmd-lab/closeread\n\n\nStep 2\nAt the top of your Quarto doc, change\nformat: html → format: closeread-html\n\n\n\nStep 3\nTell Quarto where the scrollytelling starts and stops:\n\n\n:::{.cr-section}\n\n(scrollytelling stuff goes here!)\n\n:::"
  },
  {
    "objectID": "index.html#how-closeread-works-1",
    "href": "index.html#how-closeread-works-1",
    "title": "",
    "section": "How Closeread works",
    "text": "How Closeread works\nCloseread has two components: stickies and triggers.\n\n\n\n\nStickies\nThings you want to stick on the screen. Give them an ID starting with #cr-.\n:::{#cr-myplot}\n\n```{r}\nggplot(mydata) +\n aes(x = x, y = y) +\n geom_point()\n```\n\n:::\n\nTriggers\nThese make the stickies appear. They work like citations: use the ID of the sticky with an @:\nWhen this text scrolls past, my great figure will appear! @cr-myplot"
  },
  {
    "objectID": "index.html#how-can-scrollytelling-help-my-communication",
    "href": "index.html#how-can-scrollytelling-help-my-communication",
    "title": "",
    "section": "How can scrollytelling help my communication?",
    "text": "How can scrollytelling help my communication?\n\n\nHere’s a Closeread example where we build a plot up one layer at a time:\ncloseread.dev/\ngallery/demos/\nbuild-up-plots/\n\n\nHow can we use this technique with our electricity and temperature data?"
  },
  {
    "objectID": "index.html#use-closeread-win-prizes",
    "href": "index.html#use-closeread-win-prizes",
    "title": "",
    "section": "Use Closeread, win prizes",
    "text": "Use Closeread, win prizes\n\n\nAndrew Bray (my collaborator on Closeread) and I have teamed up with data science company Posit to run the Closeread Prize.\n\n\nposit.co/blog/closeread-prize-announcement\n\n\nEntries close Jan 5th\n(we just extended the contest!)"
  },
  {
    "objectID": "index.html#thanks-questions",
    "href": "index.html#thanks-questions",
    "title": "",
    "section": "Thanks! Questions?",
    "text": "Thanks! Questions?\n @jamesgoldie.dev\n @jimjamslam@aus.social\n linkedin.com/in/jamesgoldie"
  }
]